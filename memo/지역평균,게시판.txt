* 4/30
컨트롤 시프트 L : 중복된것들 선택 
컨트롤 k f : 정렬
useEffect (스코프배열)뭐가 바뀔때마다 실행

http://localhost:3000/service/local -> 지역 평균
http://localhost:3000/service/ratio -> 비율 계산
http://localhost:3000/service/qna -> QnA 게시판
http://localhost:3000/service/qna/1 -> QnA 게시판
http://localhost:3000/service/qna/write -> QnA 게시판
http://localhost:3000/service/qna/update/1 -> QnA 게시판


로그인 유저 정보 반환
client가 header에 bearer 토큰을 포함하여 요청

0. 해당 요청의 메서드와 URL을 보고 인증 인가가 필요한 요청인지 확인
1. header의 Authorization 필드에 값이 있는지 확인
2. 해당 요청의 인증 방식이 Bearer 인증 방식인지 확인
3. Authorization 필드 값에서 토큰 추출
4. 토큰의 유효성 판단
5. 토큰에서 userId 추출
6. userId로 데이터베이스에서 조회
7. 조회 결과로부터 사용자의 권한을 추출
8. context에 request의 정보와 접근주체의 정보를 추가
9. 접근주체가 해당 요청을 사용할 권한이 있는지 확인
10. 컨트롤러의 메서드에서 인증 접근 주체의 정보를 가져옴

(userId)

11. 데이터베이스의 user테이블에서 userId에 해당하는 레코드를 조회
11-1. 데이터베이스 오류 발생시 'DBE' 응답 처리
12. 존재하는 user인지 확인 (null일 수 있음)
12-1. 존재하지 않으면 'AF' 응답 처리
13. 'SU' 응답 처리 (userId, userRole 포함)



eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTcxNDQ1OTY3NywiZXhwIjoxNzE0ND1Njc3fQ.BkSqMgooDKl-FaguAHjf2FptUdOQ6O6jDq24-ofFfmo

*5/2
Q&A 게시판

0. 클라이언트로부터 Authorization 헤더와 Request Body를 포함하여 요청
0.1 권한이 없는 사용자이면 'AF' 응답 처리
0.2 유효하지 않은 데이터이면 'VF' 응답 처리

(title, contents), userId

1. 데이터베이스의 user테이블에서 해당 유저가 존재하는지 확인 (writerId -foreign key, userId에 존재하는 아이디만 올 수 있음)
1.1 존재하지 않는 유저라면 'AF' 응답 처리 (401)
1.2 데이터베이스 오류가 발생하면 'DBE' 응답 처리

2. Board 테이블에 데이터 삽입
2.1 데이터베이스 오류가 발생하면 'DBE' 응답 처리

3. 'SU' 응답 처리

POST
1. 인증 없이 -> "AF"
2. 유효하지 않은 데이터 -> "VF" 
3. "SU"


admin : eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTcxNDYxNjc3OCwiZXhwIjoxNzE0NjUyNzc4fQ.ZefYLn1NAvf0bHsI4s-Q1RHKJjvILKr_mJn_pcySuUk


*5/30
Q&A 게시물 리스트 불러오기

SELECT *
FROM board
WHERE title LIKE '%searchWord%'
ORDER BY reception_number DESC;

findByTitleContainsOrderByReceptionNumberDesc();

postman > GET 요청 > 밑에 내용이 안나오면 > @Getter 확인


페이지 처리
결과 전체 게시물 리스트

페이지처리 : front 방법
	    back 방법

한 페이지당 10
한 섹션당 10

총 게시물 수 : 316
총 페이지 수 : 32 ((총게시물수 -1) // 한페이지당게시물수) + 1
총 섹션 수 : 4 ((총페이지수 -1) // 한섹션당페이지수) +1

페이지 - 시작 인덱스 ~ 종료 인덱스
1- 0~9	(페이지-1)*10 ~ [페이지*10 - 1 / 맨마지막 인덱스]
2- 10~19
3- 20~29
31- 300~309
32- 310~315

섹션 - 시작 페이지 ~ 종료 페이지
1 - 1 ~ 10  (섹션 * 섹션당페이지수 - (섹션당페이지수 -1)) ~ [(섹션 * 섹션당페이지수) / 마지막페이지]
2 - 11 ~ 20
3 - 21 ~ 30
4 - 31 ~ 32

*5/7
게시물 불러오기

- 유효성 검사

(receptionNumber)

- 데이터베이스의 Board 테이블에서 receptionNumber에 해당하는 레코드 조회
SELECT*
FORM board
WHERE reception_number = :receptionNumber;

GET http://localhost:4000/api/v1/board/1

= AF,NB 확인
= 정상적으로 반환되는지 확인

PATCH http://localhost:4000/api/v1/board/1/increase-view-count

= AF,NB 확인
= 정상적으로 반환되는지 확인

GET http://localhost:4000/api/v1/board/1

= 조회수 증가 확인

게시물 답변
POST http://localhost:4000/api/v1/board/10/comment

-USER / ADMIN
= USER -> AF

= request body 잘못 -> VF

= 존재하지 않는 게시물 번호 -> NB

= SU

= 이미 작성된 답글 -> WC


*5/8
Q&A 게시물 삭제

SELECT ~

entity가 필요 writerId userId 비교, 삭제처리

관리자 : eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsImlhdCI6MTcxNTMwMjQwNywiZXhwIjoxNzE1MzM4NDA3fQ.ZYfnxEWTgYuTtMbfI2g-K010dbbj5wo-Cavxf_B3LtI
사용자 : 

DELETE http://localhost:4000/api/v1/board/10

토큰없이 => 'AF'
존재하지않는 게시물 => 'NB'
작성자가 아닐때 => 'AF'

성공 => 'SU'

Q&A 게시물 수정

PUT http://localhost:4000/api/v1/board/{receptionnumber}

인증 없이 => 'AF'
리퀘스트바디 => 'VF'
존재하지않는 접수번호=> 'NB'
작성자가 아닐때 => 'AF'
답글이 달린 상태 => 'WC'

성공 => 'SU'

수정 페이지에 url로 직접 쳐서 들어가면 무조건팅김
리스트 페이지에 게시물 없어도 페이지가 1
게시글 작성 페이지에 아무것도 입력안해도 요청 보내짐
존재하지 않는 API요청 404가 안뜸 > 처리하지 않은 예외가 발생하면 전부 인증 실패로 가버림
admin 계정으로 작성된 게시물에 수정 삭제버튼 활성화 되어 있음
검색어에 일부 특수문자 사용시 요청 실패(%, ; , / ,\: CORS, ?,/,#,. : 요청 URL이 변조됨)
검색어가 있을 때 미완료 보기 누르면 전체 결과로 바뀜












